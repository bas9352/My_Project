<UserControl x:Class="ICMS_Server.LogHistoryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:ICMS_Server"
             mc:Ignorable="d" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="14"
             TextOptions.TextFormattingMode="Ideal" 
             TextOptions.TextRenderingMode="Auto">

    <UserControl.Resources>
        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <DataTemplate x:Key="IconDeviceTemp">
            <materialDesign:PackIcon Kind="CursorDefault"
                                     HorizontalAlignment="Center"/>
        </DataTemplate>
    </UserControl.Resources>

    <UserControl.InputBindings>
        <KeyBinding  Command="{Binding btn_delSelected}"
                     Key="Delete"/>
        <KeyBinding Command="{Binding btn_saveFileAs}"
                    Key="S"
                    Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding btn_openFile}"
                    Key="O"
                    Modifiers="Ctrl"/>
    </UserControl.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <DatePicker x:Name="test" Grid.Column="1" Style="{StaticResource MaterialDesignFloatingHintDatePicker}"
                                    VerticalAlignment="Stretch"
                                    Text="{Binding txt_start_date, Mode=TwoWay}"
                                    materialDesign:HintAssist.Hint="{lex:Loc Key=start_date}"
                                    Width="auto"
                                    Height="auto"
                        Margin="0,0,10,0">
            </DatePicker>
           
            <DatePicker Grid.Column="2" Style="{StaticResource MaterialDesignFloatingHintDatePicker}"
                                    VerticalAlignment="Stretch"
                                    Text="{Binding txt_end_date, Mode=TwoWay}"
                                    materialDesign:HintAssist.Hint="{lex:Loc Key=end_date}"
                                    Width="auto"
                                    Height="auto"
                        Margin="0,0,10,0">
            </DatePicker>
            <ComboBox Grid.Column="3" x:Name="item_search" 
                      Margin="0,0,10,0"
                                  Style="{StaticResource MaterialDesignFloatingHintComboBox}" 
                                  VerticalAlignment="Stretch"
                                  IsEnabled="{Binding search_help}"
                                  Width="auto"
                                  Height="auto"
                                  materialDesign:HintAssist.Hint="{lex:Loc Key=search_help}">
                <i:Interaction.Triggers>
                    <i:EventTrigger  EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding item_search}"
                                               CommandParameter="{Binding ElementName=item_search}"/>
                    </i:EventTrigger>
                    <i:EventTrigger  EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding item_search_changed}"
                                               CommandParameter="{Binding ElementName=item_search}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <DockPanel Grid.Column="4"
                       Margin="0,0,10,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="txt_search" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                     materialDesign:HintAssist.Hint="{lex:Loc Key=search}"
                     VerticalAlignment="Stretch"
                     Height="auto"
                         Text="{Binding txt_search_null}"
                     TextWrapping="Wrap"
                     Width="auto">
                        <i:Interaction.Triggers>
                            <i:EventTrigger  EventName="TextChanged">
                                <i:InvokeCommandAction Command="{Binding txt_search_changed}"
                                               CommandParameter="{Binding ElementName=txt_search}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <Button Grid.Column="1" HorizontalAlignment="Right" 
                            Style="{StaticResource MaterialDesignRaisedLightButton}"
                        Padding="8"
                            Command="{Binding btn_search}">
                        <materialDesign:PackIcon Width="20" Height="20" Kind="AccountSearch" VerticalAlignment="Center" HorizontalAlignment="Stretch"></materialDesign:PackIcon>
                    </Button>
                </Grid>
            </DockPanel>
        </Grid>
        <Grid Grid.Row="1" Margin="10">
            <DataGrid x:Name="online_data" Foreground="Black"
                          CellStyle="{StaticResource DataGridCell}"
                          Style="{StaticResource MaterialDesignDataGrid}"
                          CanUserAddRows="False"
                          CanUserResizeColumns="False" 
                          CanUserResizeRows="False" 
                          CanUserDeleteRows="True"
                          AutoGenerateColumns="False"
                          SelectionMode="Single"
                          ScrollViewer.CanContentScroll="True" 
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding item_online}"
                                               CommandParameter="{Binding ElementName=online_data}"/>
                    </i:EventTrigger>
                    <i:EventTrigger  EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding item_online_changed}"
                                               CommandParameter="{Binding ElementName=online_data}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.Columns>
                    <DataGridTextColumn 
                                Binding="{Binding Path = v_online_pc_name}" 
                                Header="{lex:Loc Key=pc_name}" 
                        Width="auto" 
                                IsReadOnly="True"></DataGridTextColumn>
                    <DataGridTextColumn 
                                Binding="{Binding Path = v_online_status}" 
                                Header="{lex:Loc Key=pc_status}" 
                        Width="auto" 
                                IsReadOnly="True"></DataGridTextColumn>
                    <DataGridTextColumn 
                                Binding="{Binding Path = v_all_username}" 
                                Header="{lex:Loc Key=username}" 
                        Width="auto" 
                                IsReadOnly="True"></DataGridTextColumn>
                    <DataGridTextColumn 
                                Binding="{Binding Path = new_v_online_s_date}" 
                                Header="{lex:Loc Key=online_s_date}" 
                        Width="auto" 
                                IsReadOnly="True"></DataGridTextColumn>
                    <DataGridTextColumn 
                                Binding="{Binding Path = v_online_s_time}" 
                                Header="{lex:Loc Key=online_s_time}" 
                        Width="auto" 
                                IsReadOnly="True"></DataGridTextColumn>
                    <DataGridTextColumn 
                                Binding="{Binding Path = new_v_online_use_time}" 
                                Header="{lex:Loc Key=online_use_time}" 
                        Width="auto" 
                                IsReadOnly="True"></DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

    </Grid>
</UserControl>
